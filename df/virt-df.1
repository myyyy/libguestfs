.\" Automatically generated by Podwrapper::Man 1.30.3 (Pod::Simple 3.16)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\" ========================================================================
.\"
.IX Title "virt-df 1"
.TH virt-df 1 "2015-10-26" "libguestfs-1.30.3" "Virtualization Support"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
virt\-df \- Display free space on virtual filesystems
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
All guests:
.PP
.Vb 1
\& virt\-df [\-\-options]
.Ve
.PP
Single guest:
.PP
.Vb 1
\& virt\-df [\-\-options] \-d domname
\&
\& virt\-df [\-\-options] \-a disk.img [\-a disk.img ...]
.Ve
.PP
Old style:
.PP
.Vb 1
\& virt\-df [\-\-options] domname
\&
\& virt\-df [\-\-options] disk.img [disk.img ...]
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\f(CW\*(C`virt\-df\*(C'\fR is a command line tool to display free space on virtual
machine filesystems.  Unlike other tools, it doesn't just display the
size of disk allocated to a virtual machine, but can look inside disk
images to see how much space is really being used.
.PP
If used without any \fI\-a\fR or \fI\-d\fR arguments, \f(CW\*(C`virt\-df\*(C'\fR checks with
libvirt to get a list of all active and inactive guests, and performs
a \f(CW\*(C`df\*(C'\fR\-type operation on each one in turn, printing out the results.
.PP
If any \fI\-a\fR or \fI\-d\fR arguments are specified, \f(CW\*(C`virt\-df\*(C'\fR performs a
\&\f(CW\*(C`df\*(C'\fR\-type operation on either the single named libvirt domain, or on
the disk image(s) listed on the command line (which must all belong to
a single \s-1VM\s0).  \fBIn this mode (with arguments), \f(CB\*(C`virt\-df\*(C'\fB will only
work for a single guest\fR.  If you want to run on multiple guests, then
you have to invoke \f(CW\*(C`virt\-df\*(C'\fR multiple times.
.PP
Use the \fI\-\-csv\fR option to get a format which can be easily parsed by
other programs.  Other options are similar to the standard \fIdf\fR\|(1)
command.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
Show disk usage for a single libvirt guest called \f(CW\*(C`F14x64\*(C'\fR.  Make the
output human-readable:
.PP
.Vb 4
\& # virt\-df \-d F14x64 \-h
\& Filesystem                       Size     Used  Available  Use%
\& F14x64:/dev/sda1                 484M      66M       393M   14%
\& F14x64:/dev/vg_f13x64/lv_root    7.4G     3.4G       4.0G   46%
.Ve
.PP
Show disk usage for a disk image file called \fItest.img\fR:
.PP
.Vb 3
\& $ virt\-df \-a test1.img
\& Filesystem                  1K\-blocks     Used  Available  Use%
\& test1.img:/dev/sda1             99099     1551      92432    2%
.Ve
.PP
If a single guest has multiple disks, use the \fI\-a\fR option repeatedly.
A plus sign (\f(CW\*(C`+\*(C'\fR) is displayed for each additional disk.  \fBNote: Do
not do this with unrelated guest disks.\fR
.PP
.Vb 5
\& $ virt\-df \-a Win7x32TwoDisks\-a \-a Win7x32TwoDisks\-b 
\& Filesystem                   1K\-blocks    Used  Available  Use%
\& Win7x32TwoDisks\-a+:/dev/sda1    102396   24712      77684   25%
\& Win7x32TwoDisks\-a+:/dev/sda2  12478460 7403416    5075044   60%
\& Win7x32TwoDisks\-a+:/dev/sdb1    521212   55728     465484   11%
.Ve
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-\-help\fR" 4
.IX Item "--help"
Display brief help.
.IP "\fB\-a\fR file" 4
.IX Item "-a file"
.PD 0
.IP "\fB\-\-add\fR file" 4
.IX Item "--add file"
.PD
Add \fIfile\fR which should be a disk image from a virtual machine.  If
the virtual machine has multiple block devices, you must supply all of
them with separate \fI\-a\fR options.
.Sp
The format of the disk image is auto-detected.  To override this and
force a particular format use the \fI\-\-format=..\fR option.
.IP "\fB\-a \s-1URI\s0\fR" 4
.IX Item "-a URI"
.PD 0
.IP "\fB\-\-add \s-1URI\s0\fR" 4
.IX Item "--add URI"
.PD
Add a remote disk.  See \*(L"\s-1ADDING\s0 \s-1REMOTE\s0 \s-1STORAGE\s0\*(R" in \fIguestfish\fR\|(1).
.IP "\fB\-c\fR \s-1URI\s0" 4
.IX Item "-c URI"
.PD 0
.IP "\fB\-\-connect\fR \s-1URI\s0" 4
.IX Item "--connect URI"
.PD
If using libvirt, connect to the given \fI\s-1URI\s0\fR.  If omitted, then we
connect to the default libvirt hypervisor.
.Sp
If you specify guest block devices directly (\fI\-a\fR), then libvirt is
not used at all.
.IP "\fB\-\-csv\fR" 4
.IX Item "--csv"
Write out the results in \s-1CSV\s0 format (comma-separated values).  This
format can be imported easily into databases and spreadsheets, but
read \*(L"\s-1NOTE\s0 \s-1ABOUT\s0 \s-1CSV\s0 \s-1FORMAT\s0\*(R" below.
.IP "\fB\-d\fR guest" 4
.IX Item "-d guest"
.PD 0
.IP "\fB\-\-domain\fR guest" 4
.IX Item "--domain guest"
.PD
Add all the disks from the named libvirt guest.  Domain UUIDs can be
used instead of names.
.IP "\fB\-\-format=raw|qcow2|..\fR" 4
.IX Item "--format=raw|qcow2|.."
.PD 0
.IP "\fB\-\-format\fR" 4
.IX Item "--format"
.PD
The default for the \fI\-a\fR option is to auto-detect the format of the
disk image.  Using this forces the disk format for \fI\-a\fR options which
follow on the command line.  Using \fI\-\-format\fR with no argument
switches back to auto-detection for subsequent \fI\-a\fR options.
.Sp
For example:
.Sp
.Vb 1
\& virt\-df \-\-format=raw \-a disk.img
.Ve
.Sp
forces raw format (no auto-detection) for \fIdisk.img\fR.
.Sp
.Vb 1
\& virt\-df \-\-format=raw \-a disk.img \-\-format \-a another.img
.Ve
.Sp
forces raw format (no auto-detection) for \fIdisk.img\fR and reverts to
auto-detection for \fIanother.img\fR.
.Sp
If you have untrusted raw-format guest disk images, you should use
this option to specify the disk format.  This avoids a possible
security problem with malicious guests (\s-1CVE\-2010\-3851\s0).
.IP "\fB\-h\fR" 4
.IX Item "-h"
.PD 0
.IP "\fB\-\-human\-readable\fR" 4
.IX Item "--human-readable"
.PD
Print sizes in human-readable format.
.Sp
You are not allowed to use \fI\-h\fR and \fI\-\-csv\fR at the same time.
.IP "\fB\-i\fR" 4
.IX Item "-i"
.PD 0
.IP "\fB\-\-inodes\fR" 4
.IX Item "--inodes"
.PD
Print inodes instead of blocks.
.IP "\fB\-\-one\-per\-guest\fR" 4
.IX Item "--one-per-guest"
Since libguestfs 1.22, this is the default.  This option does nothing
and is left here for backwards compatibility with older scripts.
.IP "\fB\-P\fR nr_threads" 4
.IX Item "-P nr_threads"
Since libguestfs 1.22, virt-df is multithreaded and examines guests in
parallel.  By default the number of threads to use is chosen based on
the amount of free memory available at the time that virt-df is
started.  You can force virt-df to use at most \f(CW\*(C`nr_threads\*(C'\fR by using
the \fI\-P\fR option.
.Sp
Note that \fI\-P 0\fR means to autodetect, and \fI\-P 1\fR means to use a
single thread.
.IP "\fB\-\-uuid\fR" 4
.IX Item "--uuid"
Print UUIDs instead of names.  This is useful for following
a guest even when the guest is migrated or renamed, or when
two guests happen to have the same name.
.Sp
Note that only domains that we fetch from libvirt come with UUIDs.
For disk images, we still print the disk image name even when
this option is specified.
.IP "\fB\-v\fR" 4
.IX Item "-v"
.PD 0
.IP "\fB\-\-verbose\fR" 4
.IX Item "--verbose"
.PD
Enable verbose messages for debugging.
.IP "\fB\-V\fR" 4
.IX Item "-V"
.PD 0
.IP "\fB\-\-version\fR" 4
.IX Item "--version"
.PD
Display version number and exit.
.IP "\fB\-x\fR" 4
.IX Item "-x"
Enable tracing of libguestfs \s-1API\s0 calls.
.SH "STATVFS NUMBERS"
.IX Header "STATVFS NUMBERS"
\&\f(CW\*(C`virt\-df\*(C'\fR (and \fIdf\fR\|(1)) get information by issuing a \fIstatvfs\fR\|(3)
system call.  You can get the same information directly, either from
the host (using libguestfs) or inside the guest:
.IP "From the host" 4
.IX Item "From the host"
Run this command:
.Sp
.Vb 1
\& guestfish \-\-ro \-d GuestName \-i statvfs /
.Ve
.Sp
(change \fI/\fR to see stats for other filesystems).
.IP "From inside the guest" 4
.IX Item "From inside the guest"
Run this command:
.Sp
.Vb 1
\& python \-c \*(Aqimport os; s = os.statvfs ("/"); print s\*(Aq
.Ve
.Sp
(change \fI/\fR to see stats for other filesystems).
.SH "NOTE ABOUT CSV FORMAT"
.IX Header "NOTE ABOUT CSV FORMAT"
Comma-separated values (\s-1CSV\s0) is a deceptive format.  It \fIseems\fR like
it should be easy to parse, but it is definitely not easy to parse.
.PP
Myth: Just split fields at commas.  Reality: This does \fInot\fR work
reliably.  This example has two columns:
.PP
.Vb 1
\& "foo,bar",baz
.Ve
.PP
Myth: Read the file one line at a time.  Reality: This does \fInot\fR
work reliably.  This example has one row:
.PP
.Vb 2
\& "foo
\& bar",baz
.Ve
.PP
For shell scripts, use \f(CW\*(C`csvtool\*(C'\fR (http://merjis.com/developers/csv
also packaged in major Linux distributions).
.PP
For other languages, use a \s-1CSV\s0 processing library (eg. \f(CW\*(C`Text::CSV\*(C'\fR
for Perl or Python's built-in csv library).
.PP
Most spreadsheets and databases can import \s-1CSV\s0 directly.
.SH "EXIT STATUS"
.IX Header "EXIT STATUS"
This program returns 0 if successful, or non-zero if there was an
error.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIdf\fR\|(1),
\&\fIguestfs\fR\|(3),
\&\fIguestfish\fR\|(1),
\&\fIvirt\-filesystems\fR\|(1),
http://libguestfs.org/.
.SH "AUTHOR"
.IX Header "AUTHOR"
Richard W.M. Jones http://people.redhat.com/~rjones/
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2009\-2015 Red Hat Inc.
.SH "LICENSE"
.IX Header "LICENSE"
This program is free software; you can redistribute it and/or modify it
under the terms of the \s-1GNU\s0 General Public License as published by the
Free Software Foundation; either version 2 of the License, or (at your
option) any later version.
.PP
This program is distributed in the hope that it will be useful, but
\&\s-1WITHOUT\s0 \s-1ANY\s0 \s-1WARRANTY\s0; without even the implied warranty of
\&\s-1MERCHANTABILITY\s0 or \s-1FITNESS\s0 \s-1FOR\s0 A \s-1PARTICULAR\s0 \s-1PURPOSE\s0.  See the \s-1GNU\s0
General Public License for more details.
.PP
You should have received a copy of the \s-1GNU\s0 General Public License along
with this program; if not, write to the Free Software Foundation, Inc.,
51 Franklin Street, Fifth Floor, Boston, \s-1MA\s0 02110\-1301 \s-1USA\s0.
.SH "BUGS"
.IX Header "BUGS"
To get a list of bugs against libguestfs, use this link:
https://bugzilla.redhat.com/buglist.cgi?component=libguestfs&product=Virtualization+Tools
.PP
To report a new bug against libguestfs, use this link:
https://bugzilla.redhat.com/enter_bug.cgi?component=libguestfs&product=Virtualization+Tools
.PP
When reporting a bug, please supply:
.IP "\(bu" 4
The version of libguestfs.
.IP "\(bu" 4
Where you got libguestfs (eg. which Linux distro, compiled from source, etc)
.IP "\(bu" 4
Describe the bug accurately and give a way to reproduce it.
.IP "\(bu" 4
Run \fIlibguestfs\-test\-tool\fR\|(1) and paste the \fBcomplete, unedited\fR
output into the bug report.
