.\" Automatically generated by Podwrapper::Man 1.28.12 (Pod::Simple 3.16)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\" ========================================================================
.\"
.IX Title "virt-format 1"
.TH virt-format 1 "2015-07-16" "libguestfs-1.28.12" "Virtualization Support"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
virt\-format \- Erase and make a blank disk
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\& virt\-format [\-\-options] \-a disk.img [\-a disk.img ...]
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Virt-format takes an existing disk file (or it can be a host
partition, \s-1LV\s0 etc), \fBerases all data on it\fR, and formats it as a
blank disk.  It can optionally create partition tables, empty
filesystems, logical volumes and more.
.PP
To create a disk containing data, you may be better to use
\&\fIvirt\-make\-fs\fR\|(1).  If you are creating a blank disk to use in
\&\fIguestfish\fR\|(1), you should instead use the guestfish \fI\-N\fR option.
.PP
Normal usage would be something like this:
.PP
.Vb 1
\& virt\-format \-a disk.qcow
.Ve
.PP
or this:
.PP
.Vb 1
\& virt\-format \-a /dev/VG/LV
.Ve
.PP
\&\f(CW\*(C`disk.qcow\*(C'\fR or \f(CW\*(C`/dev/VG/LV\*(C'\fR must exist already.  \fBAny data on these
disks will be erased by these commands\fR.  These commands will create a
single empty partition covering the whole disk, with no filesystem
inside it.
.PP
Additional parameters can be used to control the creation of
partitions, filesystems, etc.  The most commonly used options are:
.IP "\fI\-\-filesystem=[ext3|ntfs|vfat|...]\fR" 4
.IX Item "--filesystem=[ext3|ntfs|vfat|...]"
Create an empty filesystem (\f(CW\*(C`ext3\*(C'\fR, \f(CW\*(C`ntfs\*(C'\fR etc) inside the partition.
.IP "\fI\-\-lvm[=/dev/VG/LV]\fR" 4
.IX Item "--lvm[=/dev/VG/LV]"
Create a Linux \s-1LVM2\s0 logical volume on the disk.  When used with
\&\fI\-\-filesystem\fR, the filesystem is created inside the \s-1LV\s0.
.PP
For more information about these and other options, see
\&\*(L"\s-1OPTIONS\s0\*(R" below.
.PP
The format of the disk is normally auto-detected, but you can also
force it by using the \fI\-\-format\fR option (q.v.).  In situations where
you do not trust the existing content of the disk, then it is
advisable to use this option to avoid possible exploits.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-\-help\fR" 4
.IX Item "--help"
Display brief help.
.IP "\fB\-a\fR file" 4
.IX Item "-a file"
.PD 0
.IP "\fB\-\-add\fR file" 4
.IX Item "--add file"
.PD
Add \fIfile\fR, a disk image, host partition, \s-1LV\s0, external \s-1USB\s0 disk, etc.
.Sp
The format of the disk image is auto-detected.  To override this and
force a particular format use the \fI\-\-format=..\fR option.
.Sp
\&\fBAny existing data on the disk is erased.\fR
.IP "\fB\-a \s-1URI\s0\fR" 4
.IX Item "-a URI"
.PD 0
.IP "\fB\-\-add \s-1URI\s0\fR" 4
.IX Item "--add URI"
.PD
Add a remote disk.  See \*(L"\s-1ADDING\s0 \s-1REMOTE\s0 \s-1STORAGE\s0\*(R" in \fIguestfish\fR\|(1).
.IP "\fB\-\-filesystem=ext3|ntfs|vfat|...\fR" 4
.IX Item "--filesystem=ext3|ntfs|vfat|..."
Create an empty filesystem of the specified type.  Many filesystem
types are supported by libguestfs.
.IP "\fB\-\-filesystem=none\fR" 4
.IX Item "--filesystem=none"
Create no filesystem.  This is the default.
.IP "\fB\-\-format=raw|qcow2|..\fR" 4
.IX Item "--format=raw|qcow2|.."
.PD 0
.IP "\fB\-\-format\fR" 4
.IX Item "--format"
.PD
The default for the \fI\-a\fR option is to auto-detect the format of the
disk image.  Using this forces the disk format for \fI\-a\fR options which
follow on the command line.  Using \fI\-\-format\fR with no argument
switches back to auto-detection for subsequent \fI\-a\fR options.
.Sp
For example:
.Sp
.Vb 1
\& virt\-format \-\-format=raw \-a disk.img
.Ve
.Sp
forces raw format (no auto-detection) for \f(CW\*(C`disk.img\*(C'\fR.
.Sp
.Vb 1
\& virt\-format \-\-format=raw \-a disk.img \-\-format \-a another.img
.Ve
.Sp
forces raw format (no auto-detection) for \f(CW\*(C`disk.img\*(C'\fR and reverts to
auto-detection for \f(CW\*(C`another.img\*(C'\fR.
.Sp
If you have untrusted raw-format guest disk images, you should use
this option to specify the disk format.  This avoids a possible
security problem with malicious guests (\s-1CVE\-2010\-3851\s0).
.IP "\fB\-\-label=LABEL\fR" 4
.IX Item "--label=LABEL"
Set the filesystem label.
.IP "\fB\-\-lvm=/dev/\f(BI\s-1VG\s0\fB/\f(BI\s-1LV\s0\fB\fR" 4
.IX Item "--lvm=/dev/VG/LV"
Create a Linux \s-1LVM2\s0 logical volume called \f(CW\*(C`/dev/\f(CIVG\f(CW/\f(CILV\f(CW\*(C'\fR.  You
can change the name of the volume group and logical volume.
.IP "\fB\-\-lvm\fR" 4
.IX Item "--lvm"
Create a Linux \s-1LVM2\s0 logical volume with the default name
(\f(CW\*(C`/dev/VG/LV\*(C'\fR).
.IP "\fB\-\-lvm=none\fR" 4
.IX Item "--lvm=none"
Create no logical volume.  This is the default.
.IP "\fB\-\-partition\fR" 4
.IX Item "--partition"
Create either an \s-1MBR\s0 or \s-1GPT\s0 partition covering the whole disk.  \s-1MBR\s0 is
chosen if the disk size is < 2 \s-1TB\s0, \s-1GPT\s0 if â‰¥ 2 \s-1TB\s0.
.Sp
This is the default.
.IP "\fB\-\-partition=gpt\fR" 4
.IX Item "--partition=gpt"
Create a \s-1GPT\s0 partition.
.IP "\fB\-\-partition=mbr\fR" 4
.IX Item "--partition=mbr"
Create an \s-1MBR\s0 partition.
.IP "\fB\-\-partition=none\fR" 4
.IX Item "--partition=none"
Create no partition table.  Note that Windows may not be able to see
these disks.
.IP "\fB\-v\fR" 4
.IX Item "-v"
.PD 0
.IP "\fB\-\-verbose\fR" 4
.IX Item "--verbose"
.PD
Enable verbose messages for debugging.
.IP "\fB\-V\fR" 4
.IX Item "-V"
.PD 0
.IP "\fB\-\-version\fR" 4
.IX Item "--version"
.PD
Display version number and exit.
.IP "\fB\-\-wipe\fR" 4
.IX Item "--wipe"
Normally virt-format does not wipe data from the disk (because that
takes a long time).  Thus if there is data on the disk, it is only
hidden and partially overwritten by virt-format, and it might be
recovered by disk editing tools.
.Sp
If you use this option, virt-format writes zeroes over the whole disk
so that previous data is not recoverable.
.IP "\fB\-x\fR" 4
.IX Item "-x"
Enable tracing of libguestfs \s-1API\s0 calls.
.SH "EXIT STATUS"
.IX Header "EXIT STATUS"
This program returns \f(CW0\fR on success, or \f(CW1\fR on failure.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIguestfs\fR\|(3),
\&\fIguestfish\fR\|(1),
\&\fIvirt\-filesystems\fR\|(1),
\&\fIvirt\-make\-fs\fR\|(1),
\&\fIvirt\-rescue\fR\|(1),
\&\fIvirt\-resize\fR\|(1),
http://libguestfs.org/.
.SH "AUTHOR"
.IX Header "AUTHOR"
Richard W.M. Jones http://people.redhat.com/~rjones/
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2012 Red Hat Inc.
.SH "LICENSE"
.IX Header "LICENSE"
This program is free software; you can redistribute it and/or modify it
under the terms of the \s-1GNU\s0 General Public License as published by the
Free Software Foundation; either version 2 of the License, or (at your
option) any later version.
.PP
This program is distributed in the hope that it will be useful, but
\&\s-1WITHOUT\s0 \s-1ANY\s0 \s-1WARRANTY\s0; without even the implied warranty of
\&\s-1MERCHANTABILITY\s0 or \s-1FITNESS\s0 \s-1FOR\s0 A \s-1PARTICULAR\s0 \s-1PURPOSE\s0.  See the \s-1GNU\s0
General Public License for more details.
.PP
You should have received a copy of the \s-1GNU\s0 General Public License along
with this program; if not, write to the Free Software Foundation, Inc.,
51 Franklin Street, Fifth Floor, Boston, \s-1MA\s0 02110\-1301 \s-1USA\s0.
.SH "BUGS"
.IX Header "BUGS"
To get a list of bugs against libguestfs, use this link:
https://bugzilla.redhat.com/buglist.cgi?component=libguestfs&product=Virtualization+Tools
.PP
To report a new bug against libguestfs, use this link:
https://bugzilla.redhat.com/enter_bug.cgi?component=libguestfs&product=Virtualization+Tools
.PP
When reporting a bug, please supply:
.IP "\(bu" 4
The version of libguestfs.
.IP "\(bu" 4
Where you got libguestfs (eg. which Linux distro, compiled from source, etc)
.IP "\(bu" 4
Describe the bug accurately and give a way to reproduce it.
.IP "\(bu" 4
Run \fIlibguestfs\-test\-tool\fR\|(1) and paste the \fBcomplete, unedited\fR
output into the bug report.
