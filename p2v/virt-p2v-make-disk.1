.\" Automatically generated by Podwrapper::Man 1.30.3 (Pod::Simple 3.16)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\" ========================================================================
.\"
.IX Title "virt-p2v-make-disk 1"
.TH virt-p2v-make-disk 1 "2015-10-16" "libguestfs-1.30.3" "Virtualization Support"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
virt\-p2v\-make\-disk \- Build the virt\-p2v disk using virt\-builder
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\& virt\-p2v\-make\-disk \-o /dev/sdX os\-version
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fIvirt\-p2v\fR\|(1) converts a physical machine to run virtualized on \s-1KVM\s0,
managed by libvirt, OpenStack, oVirt, Red Hat Enterprise
Virtualisation (\s-1RHEV\s0), or one of the other targets supported by
\&\fIvirt\-v2v\fR\|(1).
.PP
virt\-p2v\-make\-disk is a script which creates a bootable disk image or
\&\s-1USB\s0 key containing virt\-p2v.  It uses \fIvirt\-builder\fR\|(1) to do this,
and is just a small shell script around virt-builder.
.PP
virt\-p2v\-make\-disk has two required parameters:
.PP
The \fI\-o\fR parameter specifies where the output should go, for example
to a \s-1USB\s0 key (eg. \f(CW\*(C`\-o /dev/sdX\*(C'\fR) or to a file.  If you pass a device
name, then \fBthe existing contents of the device will be erased\fR.
.PP
The \f(CW\*(C`os\-version\*(C'\fR parameter is the base Linux distro to use for the
operating system on the \s-1ISO\s0.  To list possible \f(CW\*(C`os\-version\*(C'\fR
combinations, do:
.PP
.Vb 1
\& virt\-builder \-l
.Ve
.SS "\s-1EXAMPLES\s0"
.IX Subsection "EXAMPLES"
Write a virt\-p2v bootable \s-1USB\s0 key on \fI/dev/sdX\fR (and existing content
is erased), using Fedora 20 as the base distribution:
.PP
.Vb 1
\& virt\-p2v\-make\-disk \-o /dev/sdX fedora\-20
.Ve
.PP
Write a virt\-p2v bootable virtual disk image, and boot it under qemu:
.PP
.Vb 4
\& virt\-p2v\-make\-disk \-o /var/tmp/p2v.img fedora\-20
\& qemu\-kvm \-m 1024 \-boot c \e
\&   \-drive file=/var/tmp/p2v.img,if=virtio,index=0 \e
\&   \-drive file=/var/tmp/guest.img,if=virtio,index=1
.Ve
.PP
where \fI/var/tmp/guest.img\fR would be the disk image of some guest that
you want to convert (for testing only).
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-\-help\fR" 4
.IX Item "--help"
Display help.
.IP "\fB\-o\fR \s-1OUTPUT\s0" 4
.IX Item "-o OUTPUT"
.PD 0
.IP "\fB\-\-output\fR \s-1OUTPUT\s0" 4
.IX Item "--output OUTPUT"
.PD
Write output to \f(CW\*(C`OUTPUT\*(C'\fR, which can be a local file or block device.
\&\fBThe existing contents of the device will be erased\fR.
.IP "\fB\-V\fR" 4
.IX Item "-V"
.PD 0
.IP "\fB\-\-version\fR" 4
.IX Item "--version"
.PD
Display version number and exit.
.SH "FILES"
.IX Header "FILES"
.ie n .IP "\fI\fI$libexecdir\fI/virt\-p2v\fR" 4
.el .IP "\fI\f(CI$libexecdir\fI/virt\-p2v\fR" 4
.IX Item "$libexecdir/virt-p2v"
The \fIvirt\-p2v\fR\|(1) binary which is copied into the bootable disk
image.  The location of the binary can be changed by setting the
\&\f(CW\*(C`VIRT_P2V_DATA_DIR\*(C'\fR environment variable.
.ie n .IP "\fI\fI$datadir\fI/issue\fR" 4
.el .IP "\fI\f(CI$datadir\fI/issue\fR" 4
.IX Item "$datadir/issue"
.PD 0
.ie n .IP "\fI\fI$datadir\fI/launch\-virt\-p2v.in\fR" 4
.el .IP "\fI\f(CI$datadir\fI/launch\-virt\-p2v.in\fR" 4
.IX Item "$datadir/launch-virt-p2v.in"
.ie n .IP "\fI\fI$datadir\fI/p2v.service\fR" 4
.el .IP "\fI\f(CI$datadir\fI/p2v.service\fR" 4
.IX Item "$datadir/p2v.service"
.PD
Various data files that are copied into the bootable disk image.
.SH "ENVIRONMENT VARIABLES"
.IX Header "ENVIRONMENT VARIABLES"
.ie n .IP """VIRT_P2V_DATA_DIR""" 4
.el .IP "\f(CWVIRT_P2V_DATA_DIR\fR" 4
.IX Item "VIRT_P2V_DATA_DIR"
The directory where virt\-p2v\-make\-disk looks for data files (see
\&\*(L"\s-1FILES\s0\*(R" above).  If not set, a compiled-in location is used.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIvirt\-p2v\fR\|(1),
\&\fIvirt\-p2v\-make\-kickstart\fR\|(1),
\&\fIvirt\-v2v\fR\|(1),
http://libguestfs.org/.
.SH "AUTHORS"
.IX Header "AUTHORS"
Richard W.M. Jones http://people.redhat.com/~rjones/
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2009\-2015 Red Hat Inc.
.SH "LICENSE"
.IX Header "LICENSE"
This program is free software; you can redistribute it and/or modify it
under the terms of the \s-1GNU\s0 General Public License as published by the
Free Software Foundation; either version 2 of the License, or (at your
option) any later version.
.PP
This program is distributed in the hope that it will be useful, but
\&\s-1WITHOUT\s0 \s-1ANY\s0 \s-1WARRANTY\s0; without even the implied warranty of
\&\s-1MERCHANTABILITY\s0 or \s-1FITNESS\s0 \s-1FOR\s0 A \s-1PARTICULAR\s0 \s-1PURPOSE\s0.  See the \s-1GNU\s0
General Public License for more details.
.PP
You should have received a copy of the \s-1GNU\s0 General Public License along
with this program; if not, write to the Free Software Foundation, Inc.,
51 Franklin Street, Fifth Floor, Boston, \s-1MA\s0 02110\-1301 \s-1USA\s0.
.SH "BUGS"
.IX Header "BUGS"
To get a list of bugs against libguestfs, use this link:
https://bugzilla.redhat.com/buglist.cgi?component=libguestfs&product=Virtualization+Tools
.PP
To report a new bug against libguestfs, use this link:
https://bugzilla.redhat.com/enter_bug.cgi?component=libguestfs&product=Virtualization+Tools
.PP
When reporting a bug, please supply:
.IP "\(bu" 4
The version of libguestfs.
.IP "\(bu" 4
Where you got libguestfs (eg. which Linux distro, compiled from source, etc)
.IP "\(bu" 4
Describe the bug accurately and give a way to reproduce it.
.IP "\(bu" 4
Run \fIlibguestfs\-test\-tool\fR\|(1) and paste the \fBcomplete, unedited\fR
output into the bug report.
