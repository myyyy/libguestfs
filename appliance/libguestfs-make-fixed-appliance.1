.\" Automatically generated by Podwrapper::Man 1.30.3 (Pod::Simple 3.16)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\" ========================================================================
.\"
.IX Title "libguestfs-make-fixed-appliance 1"
.TH libguestfs-make-fixed-appliance 1 "2015-10-16" "libguestfs-1.30.3" "Virtualization Support"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
libguestfs\-make\-fixed\-appliance \- Make a "fixed appliance" for libguestfs
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\& libguestfs\-make\-fixed\-appliance [\-\-options] OUTPUTDIR
\&
\& libguestfs\-make\-fixed\-appliance [\-\-options] \-\-xz
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
libguestfs-make-fixed-appliance lets you make a pre-built binary
appliance for libguestfs.
.PP
\&\fBNote that ordinary users should not need to run this tool\fR.
.PP
Some reasons why you \fImight\fR want to use this include:
.IP "\(bu" 4
You want to make a self-contained libguestfs appliance that can be
copied to another machine or platform that doesn't support
\&\fIsupermin\fR\|(1).
.IP "\(bu" 4
You have multiple users on the same machine and want to avoid the
storage duplication and start-up overhead of having multiple cached
copies of the appliance.
.IP "\(bu" 4
You want to have very predictable performance from libguestfs (see
\&\fIguestfs\-performance\fR\|(1)).
.PP
For deeper understanding of why you might need this tool, read
\&\*(L"\s-1FIXED\s0 \s-1APPLIANCE\s0\*(R" in \fIguestfs\fR\|(3).
.PP
Instead of running this tool, you can download fixed appliances from
http://libguestfs.org/download/binaries/appliance/.  These
appliances were made using this tool.
.PP
There are two ways to use this tool.
.IP "\(bu" 4
Specify an output directory, for example:
.Sp
.Vb 1
\& libguestfs\-make\-fixed\-appliance /usr/local/lib/guestfs/appliance
.Ve
.Sp
The output directory is created if it does not exist.  Four files are
created in this directory:
.Sp
.Vb 4
\& <OUTPUTDIR>/kernel
\& <OUTPUTDIR>/initrd
\& <OUTPUTDIR>/root
\& <OUTPUTDIR>/README.fixed
.Ve
.Sp
Note that \f(CW\*(C`\f(CIOUTPUTDIR\f(CW/root\*(C'\fR is a sparse file, so take care when
copying it.
.Sp
You can then run libguestfs (possibly after copying this directory to
another machine) by setting the environment variable \s-1LIBGUESTFS_PATH\s0
to \f(CW\*(C`OUTPUTDIR\*(C'\fR.
.IP "\(bu" 4
The alternative method is to use the \fI\-\-xz\fR option to create a
compressed tarball:
.Sp
.Vb 1
\& libguestfs\-make\-fixed\-appliance \-\-xz
.Ve
.Sp
This creates a tarball in the \fIcurrent\fR directory called:
.Sp
.Vb 1
\& appliance\-<VERSION>.tar.xz
.Ve
.Sp
(where \f(CW\*(C`VERSION\*(C'\fR is the version of libguestfs).  The tarball contains
the four files:
.Sp
.Vb 4
\& appliance/kernel
\& appliance/initrd
\& appliance/root
\& appliance/README.fixed
.Ve
.Sp
Note that \f(CW\*(C`appliance/root\*(C'\fR is a sparse file, so take care when
copying it.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-\-help\fR" 4
.IX Item "--help"
Display short usage information and exit.
.IP "\fB\-V\fR" 4
.IX Item "-V"
.PD 0
.IP "\fB\-\-version\fR" 4
.IX Item "--version"
.PD
Display the version number and exit.
.IP "\fB\-\-xz\fR" 4
.IX Item "--xz"
Instead of creating the appliance in an output directory, create a
compressed tarball of the appliance in the current directory called
\&\fIappliance\-\fI\s-1VERSION\s0\fI.tar.xz\fR where \f(CW\*(C`VERSION\*(C'\fR is the version of
libguestfs.
.Sp
Using \fI\-\-xz\fR can take some time.  If working normally, the tool is
completely silent when it is running.
.SH "LICENSING"
.IX Header "LICENSING"
The fixed appliance is a complete Linux binary distro.  If you
distribute it, you may need to distribute corresponding source files
to remain in legal compliance with the licenses of the software in the
appliance (such as the \s-1GNU\s0 General Public License).
.SH "EXIT STATUS"
.IX Header "EXIT STATUS"
libguestfs-make-fixed-appliance returns \fI0\fR if the appliance was
built without errors.
.SH "ENVIRONMENT VARIABLES"
.IX Header "ENVIRONMENT VARIABLES"
For the full list of environment variables which may affect
libguestfs, please see the \fIguestfs\fR\|(3) manual page.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIguestfs\fR\|(3),
\&\fIsupermin\fR\|(1),
\&\fIxz\fR\|(1),
http://libguestfs.org/,
http://qemu.org/.
.SH "AUTHORS"
.IX Header "AUTHORS"
Richard W.M. Jones (\f(CW\*(C`rjones at redhat dot com\*(C'\fR)
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2009\-2015 Red Hat Inc.
.SH "LICENSE"
.IX Header "LICENSE"
This program is free software; you can redistribute it and/or modify it
under the terms of the \s-1GNU\s0 General Public License as published by the
Free Software Foundation; either version 2 of the License, or (at your
option) any later version.
.PP
This program is distributed in the hope that it will be useful, but
\&\s-1WITHOUT\s0 \s-1ANY\s0 \s-1WARRANTY\s0; without even the implied warranty of
\&\s-1MERCHANTABILITY\s0 or \s-1FITNESS\s0 \s-1FOR\s0 A \s-1PARTICULAR\s0 \s-1PURPOSE\s0.  See the \s-1GNU\s0
General Public License for more details.
.PP
You should have received a copy of the \s-1GNU\s0 General Public License along
with this program; if not, write to the Free Software Foundation, Inc.,
51 Franklin Street, Fifth Floor, Boston, \s-1MA\s0 02110\-1301 \s-1USA\s0.
.SH "BUGS"
.IX Header "BUGS"
To get a list of bugs against libguestfs, use this link:
https://bugzilla.redhat.com/buglist.cgi?component=libguestfs&product=Virtualization+Tools
.PP
To report a new bug against libguestfs, use this link:
https://bugzilla.redhat.com/enter_bug.cgi?component=libguestfs&product=Virtualization+Tools
.PP
When reporting a bug, please supply:
.IP "\(bu" 4
The version of libguestfs.
.IP "\(bu" 4
Where you got libguestfs (eg. which Linux distro, compiled from source, etc)
.IP "\(bu" 4
Describe the bug accurately and give a way to reproduce it.
.IP "\(bu" 4
Run \fIlibguestfs\-test\-tool\fR\|(1) and paste the \fBcomplete, unedited\fR
output into the bug report.
